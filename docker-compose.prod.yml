services:
  view:
    image: messenjo-view:prod
    container_name: messenjo-view-prod
    environment:
      - HOST=${HOST}
    build:
      context: ./services/view
      dockerfile: Dockerfile.prod
    depends_on:
      - chat
      - envoy

  streaming:
    image: messenjo-streaming:prod
    container_name: messenjo-streaming-prod
    build:
      context: ./services/streaming
      dockerfile: Dockerfile.prod
    env_file:
      - ./services/streaming/.env.prod
    depends_on:
      - auth
      - chat
      - redis

  auth:
    image: messenjo-auth:prod
    container_name: messenjo-auth-prod
    environment:
      - HOST=${HOST}
    build:
      context: ./services/auth
      dockerfile: Dockerfile.prod
    env_file:
      - ./services/auth/.env.prod

  chat:
    image: messenjo-chat:prod
    container_name: messenjo-chat-prod
    build:
      context: ./services/chat
      dockerfile: Dockerfile.prod
    env_file:
      - ./services/chat/.env.prod
    depends_on:
      - auth
      - redis

  redis:
    image: ghcr.io/microsoft/garnet-alpine
    container_name: messenjo-redis-prod

  nginx:
    image: nginx:stable-alpine
    container_name: messenjo-nginx-prod
    volumes:
      - ./services/nginx/nginx.conf.prod:/etc/nginx/nginx.conf:ro
      - ./services/certbot/conf:/etc/letsencrypt
      - ./services/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    depends_on:
      - auth
      - view
      - streaming
      - envoy

  envoy:
    image: envoyproxy/envoy:distroless-v1.30-latest
    container_name: messenjo-envoy-prod
    volumes:
      - ./services/envoy/envoy.yaml:/etc/envoy/envoy.yaml
    attach: false
    depends_on:
      - auth
      - chat

  pgadmin:
    image: dpage/pgadmin4
    container_name: messenjo-pgadmin-prod
    profiles:
      - pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: prod@prod.com
      PGADMIN_DEFAULT_PASSWORD: prod
    attach: false
    ports:
      - 5050:80

  certbot:
    image: certbot/certbot
    container_name: messenjo-certbot-dev
    profiles:
      - certbot
    volumes:
      - ./services/certbot/conf:/etc/letsencrypt
      - ./services/certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email ${EMAIL} -d ${DOMAIN} --agree-tos
    depends_on:
      - nginx
