syntax = "proto3";

option go_package = "github.com/tasjen/message-app-fullstack/services/chat/chat_proto";

service Chat {
  rpc GetByUsername (GetByUsernameReq) returns (GetByUsernameRes) {}
  rpc GetContacts (GetContactsReq) returns (GetContactsRes) {}
  rpc GetMessages (GetMessagesReq) returns (GetMessagesRes) {}
  rpc CreateUser (CreateUserReq) returns (CreateUserRes) {}
  rpc CreateGroup (CreateGroupReq) returns (Null) {}
  rpc AddFriend (AddFriendReq) returns (Null) {}
  rpc AddMember (AddMemberReq) returns (Null) {}
  rpc SendMessage (SendMessageReq) returns (Null) {}
}

message Null {}

message GetByUsernameReq {
  string username = 1;
}
message GetByUsernameRes {
  bytes user_id = 1;
}

message GetContactsReq {
  bytes user_id = 1;
}
message GetContactsRes {
  repeated Contact contacts = 1;
}
message Contact {
  bytes group_id = 1;
  string name = 2;
  string last_content = 3;
  int64 last_sent_at = 4;
}

message GetMessagesReq {
  bytes user_id = 1;
  bytes group_id = 2;
}
message GetMessagesRes {
  repeated Message message = 1;
}
message Message {
  int32 id = 1;
  string content = 2;
  int64 sent_at = 3;
}

message CreateUserReq {
  string username = 1;
}
message CreateUserRes {
  bytes user_id = 1;
}

message CreateGroupReq {
  bytes user_id = 1;
  string group_name = 2;
}

message AddFriendReq {
  bytes from_user_id = 1;
  bytes to_user_id = 2;
}

message AddMemberReq {
  bytes user_id = 1;
  bytes group_id = 2;
}

message SendMessageReq {
  bytes user_id = 1;
  bytes group_id = 2;
  string content = 3;
  int64 sent_at = 4;
}
